

  Todo:
 1. export pciedev_llseek from upciedev driver
 2. lines below potentially can crash appliation (file:pciedev_ufn.c,line:~206)
    cdev_del(&pciedev_cdev_m->pciedev_dev_m[k]->cdev);
    if(pciedev_cdev_m->pciedev_dev_m[k]){
        kfree(pciedev_cdev_m->pciedev_dev_m[k]);
        pciedev_cdev_m->pciedev_dev_m[k] = 0;
    }
 3. Calling 'register_upciedev_proc' function instide the function 'pciedev_probe_exp' is not correct. 
    The function 'register_upciedev_proc' modifies 3rd arguments 'pciedev_procdir' field for each device.  
    But this field is unique for entire driver. See better implementation in the file  'pciedev_ufn2.c' line:~30. 
 4. Slot number finding does not works correctly.  
    file:pciedev_probe_exp.c,line:~129-150 (func:pciedev_probe_exp). 
	My tries is file:pciedev_ufn2.c,line:590,file:GetSlotNumber. 
	tmp_parent_num is taken manually for each driver (for example for `esdadio` it is 1). 
	I think we can calculate this without this manual variable assignment.  
 5. Make error more informative.
    if (EnterCritRegion(&dev->dev_mut)){ return -ERESTARTSYS; }

    if (dev->hot_plug_events_counter != file_data_p->hot_plug_number_file_openned){
        int number_of_hot_plug_events_after_file_open = dev->hot_plug_events_counter - file_data_p->hot_plug_number_file_openned;
        int isOdd = number_of_hot_plug_events_after_file_open%2;
        int numberOfInsertionsAfterFileOpen = number_of_hot_plug_events_after_file_open/2;
        LeaveCritRegion(&dev->dev_mut);
        if(isOdd){
            ERRCT("NO DEVICE %d. Devices removed %d times and inserted %d times\n",
                  dev->dev_num,numberOfInsertionsAfterFileOpen+1,numberOfInsertionsAfterFileOpen);
            return -ENODEV;
        }
        else{
            ERRCT("DIFFERENT DEVICE %d. Devices removed %d times and inserted %d times\n",
                  dev->dev_num,numberOfInsertionsAfterFileOpen,numberOfInsertionsAfterFileOpen);
            return -UPCIEDEV_OTHER_DEVICE;
        }
	}
